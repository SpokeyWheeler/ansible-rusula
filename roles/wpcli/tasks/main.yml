---
# tasks file for wpcli
- name: check if wp-cli is installed
  become: true
  stat:
    path: /usr/local/bin/wp
  ignore_errors: true
  register: wpcliinstalled
- name: install wp-cli if it's not there
  become: true
  shell: 'cd /tmp ; curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar ; mv wp-cli.phar /usr/local/bin/wp ; chmod +x /usr/local/bin/wp'
  when: wpcliinstalled.stat.executable is not defined or wpcliinstalled.stat.executable == false
- name: check if WP is installed
  become: true
  command: '/usr/local/bin/wp core is-installed --path=/usr/share/nginx/html'
  ignore_errors: true
  register: wpinstalled
- name: make WP directory
  become: true
  file:
    path: /usr/share/nginx/html
    state: directory
    mode: '0755'
    owner: nginx
    group: nginx
- name: download latest WP if not already installed
  become: true
  shell: 'cd /usr/share/nginx/html; /usr/local/bin/wp core download --locale=en_US'
  when: "'This does not seem to be a WordPress installation' in wpinstalled.stderr or 'wp config create' in wpinstalled.stderr"
- name: create wp-config
  become: true
  shell: 'cd /usr/share/nginx/html; /usr/local/bin/wp config create --dbname=wordpress --dbuser=wordpressuser --dbpass={{ mysql_wordpressuser_password }}; chown nginx wp-config.php; chgrp nginx wp-config.php'
  when: "'This does not seem to be a WordPress installation' in wpinstalled.stderr or 'wp config create' in wpinstalled.stderr"
- name: install latest WP if not already installed
  become: true
  shell: 'cd /usr/share/nginx/html; /usr/local/bin/wp core install --url=rusula.ovh --title="Rusula : Inspired by Love" --admin_user={{ wordpress_admin_user }} --admin_password={{ wordpress_admin_password }} --admin_email=spokey@spokey.co.uk'
  when: "'This does not seem to be a WordPress installation' in wpinstalled.stderr or 'wp config create' in wpinstalled.stderr"
- name: see if there are any plugins
  become: true
  shell: "cd /usr/share/nginx/html; /usr/local/bin/wp plugin list | wc -l"
  ignore_errors: true
  register: defplugins
- name: deactivate and uninstall any existing plugins
  become: true
  shell: "cd /usr/share/nginx/html; /usr/local/bin/wp plugin deactivate --uninstall --all"
  ignore_errors: true
  when: (defplugins.stdout | int) > 0
- name: delete any existing plugins
  become: true
  shell: "cd /usr/share/nginx/html; /usr/local/bin/wp plugin delete --all"
  ignore_errors: true
  when: (defplugins.stdout | int) > 0
- name: check if wp2static is installed
  become: true
  shell: "cd /usr/share/nginx/html; /usr/local/bin/wp plugin is-installed static-html-output-plugin"
  ignore_errors: true
  register: wp2plugininstalled
- name: install and activate wp2static if it's not there
  become: true
  shell: "cd /usr/share/nginx/html; /usr/local/bin/wp --allow-root plugin install static-html-output-plugin --activate"
  when: wp2plugininstalled.rc == 1
- name: check if instagram-feed is installed
  become: true
  shell: "cd /usr/share/nginx/html; /usr/local/bin/wp plugin is-installed instagram-feed"
  ignore_errors: true
  register: ifplugininstalled
- name: install and activate instagram-feed if it's not there
  become: true
  shell: "cd /usr/share/nginx/html; /usr/local/bin/wp plugin install instagram-feed --activate"
  when: ifplugininstalled.rc == 1
- name: check if wp-importer is installed
  become: true
  shell: "cd /usr/share/nginx/html; /usr/local/bin/wp plugin is-installed wordpress-importer"
  ignore_errors: true
  register: wiplugininstalled
- name: install and activate wp-optimize if it's not there
  become: true
  shell: "cd /usr/share/nginx/html; /usr/local/bin/wp --allow-root plugin install wordpress-importer --activate"
  when: wiplugininstalled.rc == 1
- name: check if wp-globus is installed
  become: true
  shell: "cd /usr/share/nginx/html; /usr/local/bin/wp plugin is-installed wp-globus"
  ignore_errors: true
  register: wgplugininstalled
- name: install and activate wp-globus if it's not there
  become: true
  shell: "cd /usr/share/nginx/html; /usr/local/bin/wp --allow-root plugin install wp-globus --activate"
  when: wgplugininstalled.rc == 1
- name: check if wp-optimize is installed
  become: true
  shell: "cd /usr/share/nginx/html; /usr/local/bin/wp plugin is-installed wp-optimize"
  ignore_errors: true
  register: woplugininstalled
- name: install and activate wp-optimize if it's not there
  become: true
  shell: "cd /usr/share/nginx/html; /usr/local/bin/wp --allow-root plugin install wp-optimize --activate"
  when: woplugininstalled.rc == 1
- name: activate twentyseventeen theme
  become: true
  shell: "cd /usr/share/nginx/html; /usr/local/bin/wp theme activate twentyseventeen"
- name: change the site slogan
  become: true
  shell: "cd /usr/share/nginx/html; /usr/local/bin/wp option update blogdescription 'discover the five elements of your symbolic wedding'"
- name: remove initial comment
  become: true
  shell: "cd /usr/share/nginx/html; /usr/local/bin/wp comment delete $(/usr/local/bin/wp comment list --format=ids)"
- name: remove hello world post
  become: true
  shell: "cd /usr/share/nginx/html; /usr/local/bin/wp post delete $(/usr/local/bin/wp post list --format=ids)"
- name: delete all other themes
  become: true
  shell: "cd /usr/share/nginx/html; /usr/local/bin/wp theme delete --all"
  ignore_errors: true
- name: copy over export of current site
  copy:
    src: ../rusulainspiredbylove.WordPress.2020-08-01.xml
    dest: /tmp/rusulainspiredbylove.WordPress.2020-08-01.xml
- name: import from current site
  become: true
  shell: "cd /usr/share/nginx/html; /usr/local/bin/wp import /tmp/rusulainspiredbylove.WordPress.2020-08-01.xml --authors=create --skip=image_resize; rm /tmp/rusulainspiredbylove.WordPress.2020-08-01.xml"
- name: Recursively change ownership, group
  become: true
  file:
    path: /usr/share/nginx/html
    state: directory
    recurse: yes
    owner: nginx
    group: nginx
- name: set directory permissions
  become: true
  shell: 'find /usr/share/nginx/html -type d -exec chmod 755 {} \;'
- name: set file permissions
  become: true
  shell: 'find /usr/share/nginx/html -type f -exec chmod 644 {} \;'
- name: remove index.html
  become: true
  file:
    name: /usr/share/nginx/html/index.html
    state: absent
- name: remove readme.html
  become: true
  file:
    name: /usr/share/nginx/html/readme.html
    state: absent
- name: update nginx config
  become: true
  copy:
    src: nginx.conf
    dest: /etc/nginx/nginx.conf
    owner: root
    group: root
    mode: '0644'
- name: update nginx default config
  become: true
  copy:
    src: default.conf
    dest: /etc/nginx/conf.d/default.conf
    owner: root
    group: root
    mode: '0644'
- name: restart nginx
  become: true
  systemd:
    state: restarted
    name: nginx
- name: restart php
  become: true
  systemd:
    state: restarted
    name: php-fpm
